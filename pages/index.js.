import React, { useState } from 'react';
import { 
  Calculator, MapPin, Phone, Mail, Star, Users, Shield, Clock, Award, 
  ChevronRight, ArrowRight, Building, Home, Wrench, Zap, 
  CheckCircle, Menu, X, Sun, Moon, Send, Sparkles, Gift 
} from 'lucide-react';

const App = () => {
  const [activeTab, setActiveTab] = useState('home');
  const [showMenu, setShowMenu] = useState(false);
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    service: '',
    message: ''
  });
  const [isFormSubmitted, setIsFormSubmitted] = useState(false);

  const services = [
    {
      id: 1,
      name: '–ó–∞–±–æ—Ä—ã',
      icon: <Wrench className="w-8 h-8" />,
      description: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–±–æ—Ä—ã –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
      priceRange: '–æ—Ç 2500 ‚ÇΩ/–º¬≤',
      color: 'from-blue-500 to-cyan-400'
    },
    {
      id: 2,
      name: '–ù–∞–≤–µ—Å—ã',
      icon: <Home className="w-8 h-8" />,
      description: '–ü—Ä–æ—á–Ω—ã–µ –Ω–∞–≤–µ—Å—ã –¥–ª—è –¥–∞—á–∏ –∏ –¥–æ–º–∞',
      priceRange: '–æ—Ç 3500 ‚ÇΩ/–º¬≤',
      color: 'from-green-500 to-teal-400'
    },
    {
      id: 3,
      name: '–û–≥—Ä–∞–∂–¥–µ–Ω–∏—è',
      icon: <Shield className="w-8 h-8" />,
      description: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –æ–≥—Ä–∞–∂–¥–µ–Ω–∏—è –¥–ª—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π',
      priceRange: '–æ—Ç 2800 ‚ÇΩ/–º¬≤',
      color: 'from-purple-500 to-pink-400'
    }
  ];

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      // Telegram bot integration
      const telegramBotToken = '7652376591:AAGbGzcwwpIyN91fLtX2KAW0KM_qQ07RUXs';
      const chatId = '5977892192';
      
      const message = `
üß© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!
üë§ –ò–º—è: ${formData.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
üõ† –£—Å–ª—É–≥–∞: ${formData.service}
üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message}
üìç –ì–æ—Ä–æ–¥: –®—É–º–µ—Ä–ª—è
      `;
      
      await fetch(`https://api.telegram.org/bot${telegramBotToken}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: message
        })
      });
      
      setIsFormSubmitted(true);
      setTimeout(() => {
        setIsFormSubmitted(false);
        setFormData({ name: '', phone: '', service: '', message: '' });
      }, 3000);
    } catch (error) {
      console.error('Error sending to Telegram:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  };

  const ServiceCard = ({ service }) => (
    <div 
      className={`bg-gradient-to-br ${service.color} rounded-xl shadow-lg p-6 cursor-pointer transform transition-all duration-300 hover:shadow-2xl hover:scale-105`}
      onClick={() => setActiveTab('contact')}
    >
      <div className="flex items-center mb-4">
        <div className="bg-white/30 p-3 rounded-lg text-white">
          {service.icon}
        </div>
        <h3 className="text-xl font-bold text-white ml-4">{service.name}</h3>
      </div>
      <p className="text-white/90 mb-4">{service.description}</p>
      <div className="flex justify-between items-center">
        <span className="text-lg font-bold text-white">{service.priceRange}</span>
        <ChevronRight className="w-5 h-5 text-white" />
      </div>
    </div>
  );

  return (
    <div className={`min-h-screen transition-colors duration-300 ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'}`}>
      {/* Header */}
      <header className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} shadow-md sticky top-0 z-50`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center">
              <div className="bg-gradient-to-r from-blue-500 to-purple-600 p-2 rounded-lg">
                <Building className="w-6 h-6 text-white" />
              </div>
              <div className="ml-3">
                <h1 className="text-lg font-bold">–°—Ç—Ä–æ–π–ë—Ä–∏–≥–∞–¥–∞</h1>
                <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>–®—É–º–µ—Ä–ª—è</p>
              </div>
            </div>
            
            <nav className="hidden md:flex space-x-6">
              {['home', 'services', 'contact'].map((tab) => (
                <button
                  key={tab}
                  onClick={() => setActiveTab(tab)}
                  className={`capitalize font-medium text-sm ${
                    activeTab === tab ? 'text-blue-600' : isDarkMode ? 'text-gray-300' : 'text-gray-700'
                  }`}
                >
                  {tab === 'home' ? '–ì–ª–∞–≤–Ω–∞—è' : 
                   tab === 'services' ? '–£—Å–ª—É–≥–∏' : '–ö–æ–Ω—Ç–∞–∫—Ç—ã'}
                </button>
              ))}
            </nav>

            <div className="flex items-center space-x-3">
              <button
                onClick={() => setIsDarkMode(!isDarkMode)}
                className={`p-2 rounded-full ${isDarkMode ? 'bg-yellow-400 text-gray-900' : 'bg-gray-200 text-gray-700'}`}
              >
                {isDarkMode ? <Sun className="w-4 h-4" /> : <Moon className="w-4 h-4" />}
              </button>
              
              <button
                className="md:hidden p-2"
                onClick={() => setShowMenu(!showMenu)}
              >
                {showMenu ? <X className="w-5 h-5" /> : <Menu className="w-5 h-5" />}
              </button>
            </div>
          </div>
        </div>

        {showMenu && (
          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} md:hidden border-t`}>
            <div className="px-4 py-3 space-y-2">
              {['home', 'services', 'contact'].map((tab) => (
                <button
                  key={tab}
                  onClick={() => {
                    setActiveTab(tab);
                    setShowMenu(false);
                  }}
                  className={`block w-full text-left py-2 capitalize font-medium text-sm ${
                    isDarkMode ? 'text-gray-300' : 'text-gray-700'
                  }`}
                >
                  {tab === 'home' ? '–ì–ª–∞–≤–Ω–∞—è' : 
                   tab === 'services' ? '–£—Å–ª—É–≥–∏' : '–ö–æ–Ω—Ç–∞–∫—Ç—ã'}
                </button>
              ))}
            </div>
          </div>
        )}
      </header>

      {/* Hero Section */}
      {activeTab === 'home' && (
        <section className="bg-gradient-to-r from-blue-600 to-purple-600 text-white py-16 overflow-hidden">
          <div className="absolute inset-0 bg-[url('https://placehold.co/1920x1080/2563eb/ffffff?text=Background')] opacity-10"></div>
          
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
            <div className="text-center">
              <h1 className="text-4xl md:text-5xl font-bold mb-6 leading-tight">
                –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤ –®—É–º–µ—Ä–ª–µ
                <br />
                <span className="text-yellow-300">–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ</span>
              </h1>
              <p className="text-xl mb-8 max-w-2xl mx-auto">
                –ó–∞–±–æ—Ä—ã, –Ω–∞–≤–µ—Å—ã –∏ –æ–≥—Ä–∞–∂–¥–µ–Ω–∏—è. –ë—ã—Å—Ç—Ä–æ, –Ω–∞–¥–µ–∂–Ω–æ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ!
              </p>
              
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button
                  onClick={() => setActiveTab('services')}
                  className="bg-white text-blue-600 px-8 py-3 rounded-lg font-bold hover:bg-gray-100 transition-all duration-300 flex items-center"
                >
                  <Sparkles className="w-5 h-5 mr-2" />
                  –ù–∞—à–∏ —É—Å–ª—É–≥–∏
                </button>
                <button
                  onClick={() => setActiveTab('contact')}
                  className="border-2 border-white text-white px-8 py-3 rounded-lg font-bold hover:bg-white hover:text-blue-600 transition-all duration-300 flex items-center"
                >
                  <Phone className="w-5 h-5 mr-2" />
                  –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                </button>
              </div>
            </div>
          </div>
          
          {/* Decorative elements */}
          <div className="absolute top-20 right-10 w-20 h-20 bg-yellow-400 rounded-full opacity-30 animate-spin-slow"></div>
          <div className="absolute bottom-20 left-10 w-16 h-16 bg-green-400 rounded-full opacity-30 animate-spin-slower"></div>
        </section>
      )}

      {/* Services Section */}
      {activeTab === 'services' && (
        <section className={`py-16 ${isDarkMode ? 'bg-gray-800' : 'bg-gray-50'}`}>
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold mb-4">–ù–∞—à–∏ —É—Å–ª—É–≥–∏</h2>
              <p className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>
                –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∫–∞
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
              {services.map((service) => (
                <ServiceCard key={service.id} service={service} />
              ))}
            </div>

            <div className={`${isDarkMode ? 'bg-gray-700' : 'bg-white'} rounded-xl shadow-lg p-8`}>
              <h3 className="text-2xl font-bold mb-6 flex items-center">
                <Calculator className="mr-3 text-blue-600" />
                –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium mb-2">–¢–∏–ø —É—Å–ª—É–≥–∏</label>
                  <select
                    value={formData.service}
                    onChange={(e) => setFormData({ ...formData, service: e.target.value })}
                    className={`w-full p-3 border rounded-lg ${
                      isDarkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'
                    }`}
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É</option>
                    <option value="–∑–∞–±–æ—Ä">–ó–∞–±–æ—Ä</option>
                    <option value="–Ω–∞–≤–µ—Å">–ù–∞–≤–µ—Å</option>
                    <option value="–æ–≥—Ä–∞–∂–¥–µ–Ω–∏–µ">–û–≥—Ä–∞–∂–¥–µ–Ω–∏–µ</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={formData.area || ''}
                    onChange={(e) => setFormData({ ...formData, area: e.target.value })}
                    className={`w-full p-3 border rounded-lg ${
                      isDarkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'
                    }`}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-2">–¶–µ–Ω–∞</label>
                  <div className={`w-full p-3 border rounded-lg ${
                    isDarkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'
                  }`}>
                    {formData.area && formData.service ? 
                      `${Math.round((formData.area * (formData.service === '–∑–∞–±–æ—Ä' ? 2500 : formData.service === '–Ω–∞–≤–µ—Å' ? 3500 : 2800))).toLocaleString()} ‚ÇΩ` : '‚Äî'}
                  </div>
                </div>
                
                <div className="flex items-end">
                  <button
                    onClick={() => {
                      if (formData.area && formData.service) {
                        alert(`–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞: ${Math.round((formData.area * (formData.service === '–∑–∞–±–æ—Ä' ? 2500 : formData.service === '–Ω–∞–≤–µ—Å' ? 3500 : 2800))).toLocaleString()} ‚ÇΩ`);
                      }
                    }}
                    className="w-full bg-gradient-to-r from-blue-600 to-indigo-600 text-white py-3 px-4 rounded-lg font-semibold hover:from-blue-700 hover:to-indigo-700 transition-all duration-300 flex items-center"
                  >
                    <Zap className="w-4 h-4 mr-2" />
                    –†–∞—Å—Å—á–∏—Ç–∞—Ç—å
                  </button>
                </div>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Contact Section */}
      {activeTab === 'contact' && (
        <section className={`py-16 ${isDarkMode ? 'bg-gray-800' : 'bg-gray-50'}`}>
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold mb-4">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>
              <p className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>
                –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
              </p>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              <div className="space-y-6">
                <div className="flex items-start">
                  <div className="bg-blue-100 p-3 rounded-lg text-blue-600 mr-4">
                    <Phone className="w-5 h-5" />
                  </div>
                  <div>
                    <h3 className="font-semibold mb-1">–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                    <p className={isDarkMode ? 'text-gray-300' : 'text-gray-600'}>+7 (937) 388-1435</p>
                  </div>
                </div>

                <div className="flex items-start">
                  <div className="bg-green-100 p-3 rounded-lg text-green-600 mr-4">
                    <Mail className="w-5 h-5" />
                  </div>
                  <div>
                    <h3 className="font-semibold mb-1">Email</h3>
                    <p className={isDarkMode ? 'text-gray-300' : 'text-gray-600'}>info@stroybrigada.ru</p>
                  </div>
                </div>

                <div className="flex items-start">
                  <div className="bg-purple-100 p-3 rounded-lg text-purple-600 mr-4">
                    <MapPin className="w-5 h-5" />
                  </div>
                  <div>
                    <h3 className="font-semibold mb-1">–ê–¥—Ä–µ—Å</h3>
                    <p className={isDarkMode ? 'text-gray-300' : 'text-gray-600'}>–≥. –®—É–º–µ—Ä–ª—è, —É–ª. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, –¥. 15</p>
                  </div>
                </div>

                <div className="flex items-start">
                  <div className="bg-orange-100 p-3 rounded-lg text-orange-600 mr-4">
                    <Clock className="w-5 h-5" />
                  </div>
                  <div>
                    <h3 className="font-semibold mb-1">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</h3>
                    <p className={isDarkMode ? 'text-gray-300' : 'text-gray-600'}>–ü–Ω-–ü—Ç: 9:00-18:00</p>
                    <p className={isDarkMode ? 'text-gray-300' : 'text-gray-600'}>–°–±: 10:00-16:00</p>
                    <p className={isDarkMode ? 'text-gray-300' : 'text-gray-600'}>–í—Å: –≤—ã—Ö–æ–¥–Ω–æ–π</p>
                  </div>
                </div>
              </div>

              <div className={`${isDarkMode ? 'bg-gray-700' : 'bg-white'} rounded-xl shadow-lg p-6`}>
                <h3 className="text-xl font-bold mb-6 flex items-center">
                  <Send className="mr-2 text-blue-600" />
                  –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É
                </h3>
                
                {isFormSubmitted ? (
                  <div className="bg-green-50 border border-green-200 rounded-lg p-4 text-center">
                    <CheckCircle className="w-8 h-8 text-green-500 mx-auto mb-2" />
                    <h4 className="font-bold text-green-700">–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!</h4>
                    <p className="text-green-600 text-sm">–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
                  </div>
                ) : (
                  <form onSubmit={handleSubmit} className="space-y-4">
                    <div>
                      <input
                        type="text"
                        name="name"
                        value={formData.name}
                        onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                        placeholder="–í–∞—à–µ –∏–º—è"
                        className={`w-full p-3 border rounded-lg ${
                          isDarkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'
                        }`}
                        required
                      />
                    </div>
                    
                    <div>
                      <input
                        type="tel"
                        name="phone"
                        value={formData.phone}
                        onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                        placeholder="–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω"
                        className={`w-full p-3 border rounded-lg ${
                          isDarkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'
                        }`}
                        required
                      />
                    </div>
                    
                    <div>
                      <select
                        name="service"
                        value={formData.service}
                        onChange={(e) => setFormData({ ...formData, service: e.target.value })}
                        className={`w-full p-3 border rounded-lg ${
                          isDarkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'
                        }`}
                        required
                      >
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É</option>
                        <option value="–∑–∞–±–æ—Ä">–ó–∞–±–æ—Ä</option>
                        <option value="–Ω–∞–≤–µ—Å">–ù–∞–≤–µ—Å</option>
                        <option value="–æ–≥—Ä–∞–∂–¥–µ–Ω–∏–µ">–û–≥—Ä–∞–∂–¥–µ–Ω–∏–µ</option>
                      </select>
                    </div>
                    
                    <div>
                      <textarea
                        name="message"
                        value={formData.message}
                        onChange={(e) => setFormData({ ...formData, message: e.target.value })}
                        placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ"
                        rows={4}
                        className={`w-full p-3 border rounded-lg ${
                          isDarkMode ? 'bg-gray-800 border-gray-600' : 'bg-white border-gray-300'
                        }`}
                        required
                      ></textarea>
                    </div>
                    
                    <button
                      type="submit"
                      className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-3 px-4 rounded-lg font-semibold hover:from-blue-700 hover:to-purple-700 transition-all duration-300 flex items-center justify-center"
                    >
                      <Gift className="w-4 h-4 mr-2" />
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                    </button>
                  </form>
                )}
                
                <div className="mt-6 text-center">
                  <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mb-2`}>
                    –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ WhatsApp:
                  </p>
                  <a
                    href="https://wa.me/79373881435"
                    target="_blank"
                    rel="noopener noreferrer"
                    className="inline-block bg-green-500 text-white px-6 py-2 rounded-lg font-semibold hover:bg-green-600 transition-all duration-300 flex items-center justify-center"
                  >
                    <span>WhatsApp</span>
                    <span className="ml-2">üí¨</span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Footer */}
      <footer className={`${isDarkMode ? 'bg-gray-900' : 'bg-gray-900'} text-white py-8`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div>
              <div className="flex items-center mb-4">
                <div className="bg-blue-600 p-2 rounded-lg">
                  <Building className="w-5 h-5 text-white" />
                </div>
                <span className="ml-2 text-lg font-bold">–°—Ç—Ä–æ–π–ë—Ä–∏–≥–∞–¥–∞</span>
              </div>
              <p className="text-gray-400 text-sm">
                –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤ –®—É–º–µ—Ä–ª–µ
              </p>
            </div>
            
            <div>
              <h4 className="font-semibold mb-3">–£—Å–ª—É–≥–∏</h4>
              <ul className="space-y-2 text-gray-400 text-sm">
                <li>–ó–∞–±–æ—Ä—ã</li>
                <li>–ù–∞–≤–µ—Å—ã</li>
                <li>–û–≥—Ä–∞–∂–¥–µ–Ω–∏—è</li>
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold mb-3">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
              <ul className="space-y-2 text-gray-400 text-sm">
                <li>+7 (937) 388-1435</li>
                <li>info@stroybrigada.ru</li>
                <li>–≥. –®—É–º–µ—Ä–ª—è</li>
              </ul>
            </div>
          </div>
          
          <div className="border-t border-gray-800 mt-6 pt-6 text-center text-gray-400 text-sm">
            <p>&copy; 2024 –°—Ç—Ä–æ–π–ë—Ä–∏–≥–∞–¥–∞. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default App;
